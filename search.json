[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Image Processing for Remote Sensing",
    "section": "",
    "text": "Welcome!\nWelcome to the Part Geospatial Computing in the course Image Processing for Remote Sensing. This course is taught in the Bachelor Degree Applied Digital Life Sciences at the Zurich University of Applied Sciences (ZHAW).",
    "crumbs": [
      "Welcome!"
    ]
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Image Processing for Remote Sensing",
    "section": "",
    "text": "Visit https://www.zhaw.ch/de/lsfm/institute-zentren/iunr/geooekologie/geoinformatik#c121022 to introduce yourself\nThese materials will be used as “slides” in class, but are designed to be used to read up on the topics later on\nWe will use R to introduce the basics of image processing, since R lends itself to illustrate many basic consepts nicely.\nOnce the concepts are understood, they can be applied to many other programming languages",
    "crumbs": [
      "Welcome!"
    ]
  },
  {
    "objectID": "lesson1-1-tidy.html",
    "href": "lesson1-1-tidy.html",
    "title": "From tabular data to raster",
    "section": "",
    "text": "Tabular data\nProduc &lt;- read_csv(\"data/Produc.csv\") |&gt; \n    select(-region) |&gt; \n    filter(!(state == \"ARIZONA\" & year == 1971))\n\n# Produc[Produc$state == \"ARIZONA\" & Produc$year == 1971,c(\"unemp\")] &lt;- NA\n\nProduc |&gt; \n    head() |&gt; \n    kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstate\nyear\npcap\nhwy\nwater\nutil\npc\ngsp\nemp\nunemp\n\n\n\n\nALABAMA\n1970\n15032.67\n7325.80\n1655.68\n6051.20\n35793.80\n28418\n1010.5\n4.7\n\n\nALABAMA\n1971\n15501.94\n7525.94\n1721.02\n6254.98\n37299.91\n29375\n1021.9\n5.2\n\n\nALABAMA\n1972\n15972.41\n7765.42\n1764.75\n6442.23\n38670.30\n31303\n1072.3\n4.7\n\n\nALABAMA\n1973\n16406.26\n7907.66\n1742.41\n6756.19\n40084.01\n33430\n1135.5\n3.9\n\n\nALABAMA\n1974\n16762.67\n8025.52\n1734.85\n7002.29\n42057.31\n33749\n1169.8\n5.5\n\n\nALABAMA\n1975\n17316.26\n8158.23\n1752.27\n7405.76\n43971.71\n33604\n1155.4\n7.7",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>From tabular data to raster</span>"
    ]
  },
  {
    "objectID": "lesson1-1-tidy.html#tabular-data",
    "href": "lesson1-1-tidy.html#tabular-data",
    "title": "From tabular data to raster",
    "section": "",
    "text": "Wickham (2014): Tidy tabular data: Each variable is a column, each observation is a row, and each type of observational unit is a table.\nBelow is a dataset from Baltagi and Baltagi (2008)\nObservation is a state in a particular year\nVariable is a measured parameter (see below)\n\n\n\nStart with Wickham’s fundamental definition - this is the foundation\nEmphasize this is about data structure, not just organization\nThe Produc dataset is a classic econometric panel dataset - good for demonstrating concepts\nMake sure students understand what constitutes an “observation” vs a “variable”\n\n\n\n\n\n\n\n\nNoteParameter\n\n\n\n\n\n\npcap: public capital stock\nhwy: highway and streets\nwater: water and sewer facilities\nutil: other public buildings and structures\npc: private capital stock\ngsp: gross state product\nemp: labor input measured by the employment in non–agricultural payrolls\nunemp: state unemployment rate\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nThis is considered a long table and is great for modelling and visualization.\nIt’s bad for memory (a lot of repetitions)",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>From tabular data to raster</span>"
    ]
  },
  {
    "objectID": "lesson1-1-tidy.html#long-tables-have-a-lot-of-repetitions",
    "href": "lesson1-1-tidy.html#long-tables-have-a-lot-of-repetitions",
    "title": "From tabular data to raster",
    "section": "Long tables have a lot of repetitions:",
    "text": "Long tables have a lot of repetitions:\n\nlength(Produc$state)\n## [1] 815\nn_distinct(Produc$state)\n## [1] 48\n\nlength(Produc$year)\n## [1] 815\nn_distinct(Produc$year)\n## [1] 17\n\n\nn_values &lt;- dim(Produc) |&gt;\n  prod()\n\nn_values\n## [1] 8150\n\n\n\nWalk through the calculation step by step\n816 total entries for state, but only 48 unique states\nThis repetition is characteristic of long/tidy format\nGreat for analysis but wasteful of memory\nThis leads naturally to why we might want wide format for raster data",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>From tabular data to raster</span>"
    ]
  },
  {
    "objectID": "lesson1-1-tidy.html#wide-tables-have-less-repetitions.",
    "href": "lesson1-1-tidy.html#wide-tables-have-less-repetitions.",
    "title": "From tabular data to raster",
    "section": "Wide tables have less repetitions.",
    "text": "Wide tables have less repetitions.\nTo demonstrate we convert a long to wide.\n\n\nThis is the key transition - from statistical/analysis format to raster format\nWide format is more memory efficient but less flexible for analysis\nThis mirrors how raster data is naturally stored\n\n\n\n# Pivoting must be done per variable\nProduc_wide &lt;- Produc |&gt; \n    select(state, year, unemp) |&gt; \n    pivot_wider(names_from = state, values_from = unemp) |&gt; \n    column_to_rownames(\"year\")\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nWe can either omit the column “year”, (since this is implicit knowledge, \\(row_i + 1970\\)), or use it as a rowname.",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>From tabular data to raster</span>"
    ]
  },
  {
    "objectID": "lesson1-1-tidy.html#long-vs-wide",
    "href": "lesson1-1-tidy.html#long-vs-wide",
    "title": "From tabular data to raster",
    "section": "Long vs Wide",
    "text": "Long vs Wide\nLong / tidy:\n\nProduc |&gt; \n    head(5) |&gt; \n    kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstate\nyear\npcap\nhwy\nwater\nutil\npc\ngsp\nemp\nunemp\n\n\n\n\nALABAMA\n1970\n15032.67\n7325.80\n1655.68\n6051.20\n35793.80\n28418\n1010.5\n4.7\n\n\nALABAMA\n1971\n15501.94\n7525.94\n1721.02\n6254.98\n37299.91\n29375\n1021.9\n5.2\n\n\nALABAMA\n1972\n15972.41\n7765.42\n1764.75\n6442.23\n38670.30\n31303\n1072.3\n4.7\n\n\nALABAMA\n1973\n16406.26\n7907.66\n1742.41\n6756.19\n40084.01\n33430\n1135.5\n3.9\n\n\nALABAMA\n1974\n16762.67\n8025.52\n1734.85\n7002.29\n42057.31\n33749\n1169.8\n5.5\n\n\n\n\n\n\nWide / untidy:\n\nProduc_wide |&gt; \n    head(5) |&gt; \n    kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nALABAMA\nARIZONA\nARKANSAS\nCALIFORNIA\nCOLORADO\nCONNECTICUT\nDELAWARE\nFLORIDA\nGEORGIA\nIDAHO\nILLINOIS\nINDIANA\nIOWA\nKANSAS\nKENTUCKY\nLOUISIANA\nMAINE\nMARYLAND\nMASSACHUSETTS\nMICHIGAN\nMINNESOTA\nMISSISSIPPI\nMISSOURI\nMONTANA\nNEBRASKA\nNEVADA\nNEW_HAMPSHIRE\nNEW_JERSEY\nNEW_MEXICO\nNEW_YORK\nNORTH_CAROLINA\nNORTH_DAKOTA\nOHIO\nOKLAHOMA\nOREGON\nPENNSYLVANIA\nRHODE_ISLAND\nSOUTH_CAROLINA\nSOUTH_DAKOTA\nTENNESSE\nTEXAS\nUTAH\nVERMONT\nVIRGINIA\nWASHINGTON\nWEST_VIRGINIA\nWISCONSIN\nWYOMING\n\n\n\n\n1970\n4.7\n4.4\n5.0\n7.2\n4.4\n5.6\n4.8\n4.4\n4.1\n5.8\n4.1\n5.0\n3.7\n4.8\n5.0\n6.6\n5.7\n3.3\n4.6\n6.7\n4.2\n4.8\n3.3\n5.5\n3.1\n5.9\n3.3\n4.6\n5.9\n4.5\n4.3\n4.6\n5.4\n4.4\n6.2\n4.5\n5.2\n5.0\n3.3\n4.8\n4.4\n6.1\n4.9\n3.4\n9.1\n6.1\n3.9\n4.5\n\n\n1971\n5.2\nNA\n5.4\n8.8\n4.0\n8.9\n5.7\n4.9\n3.9\n6.3\n5.1\n5.7\n4.2\n5.5\n5.5\n7.0\n7.6\n4.2\n6.6\n7.6\n4.4\n4.8\n4.9\n6.3\n3.6\n7.0\n4.7\n5.7\n6.2\n6.6\n4.8\n5.3\n6.5\n4.9\n6.6\n5.4\n6.8\n5.3\n3.7\n5.0\n4.9\n6.4\n6.8\n3.6\n10.0\n6.5\n4.5\n4.5\n\n\n1972\n4.7\n4.2\n4.6\n7.6\n3.6\n8.2\n4.7\n4.5\n4.1\n6.2\n5.1\n4.5\n3.6\n4.0\n4.8\n6.1\n7.0\n4.7\n6.4\n7.0\n4.3\n3.9\n4.2\n6.2\n3.4\n7.0\n4.5\n5.8\n5.8\n6.7\n4.0\n4.9\n5.5\n4.5\n5.7\n5.4\n6.5\n4.2\n3.7\n3.6\n4.5\n6.1\n6.5\n3.6\n9.5\n6.5\n4.2\n4.0\n\n\n1973\n3.9\n4.1\n4.1\n7.0\n3.4\n5.7\n4.6\n4.3\n3.9\n5.6\n4.1\n4.2\n2.9\n3.1\n4.4\n6.0\n5.9\n3.5\n6.7\n5.8\n4.4\n3.6\n3.7\n6.3\n3.3\n6.2\n3.9\n5.6\n5.7\n5.4\n3.5\n5.1\n4.3\n4.2\n5.3\n4.8\n6.2\n3.7\n3.3\n3.0\n3.9\n5.7\n5.6\n3.6\n7.7\n5.7\n4.1\n3.5\n\n\n1974\n5.5\n5.6\n4.8\n7.7\n3.8\n6.2\n6.0\n6.2\n5.0\n6.0\n4.5\n5.9\n3.0\n3.5\n4.5\n6.7\n6.7\n3.7\n7.2\n8.7\n4.3\n4.1\n4.5\n6.7\n3.8\n7.5\n3.6\n6.9\n6.3\n6.3\n4.5\n3.0\n5.0\n4.4\n7.5\n5.1\n7.3\n4.5\n3.5\n3.9\n4.3\n5.9\n6.9\n4.0\n7.2\n5.9\n4.6\n3.6",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>From tabular data to raster</span>"
    ]
  },
  {
    "objectID": "lesson1-1-tidy.html#dataframe-matrix",
    "href": "lesson1-1-tidy.html#dataframe-matrix",
    "title": "From tabular data to raster",
    "section": "Dataframe → Matrix",
    "text": "Dataframe → Matrix\nLess repetitions / smaller memory footprint is only part of the advantage:\n\nAll columns now have the same datatype (dbl)\n\nThis means, they can be stored in a matrix / array\nThis gives us a big speed advantage (see Figure 1.1)\n\n\n\n\n\n\n\n\n\n\nFigure 1.1\n\n\n\n\n\n\n\nHomogeneous data types enable matrix operations\nMatrices are stored contiguously in memory - much faster access\nThis speed difference becomes enormous with large raster datasets\nMatrix operations are highly optimized and often vectorized",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>From tabular data to raster</span>"
    ]
  },
  {
    "objectID": "lesson1-1-tidy.html#limitations",
    "href": "lesson1-1-tidy.html#limitations",
    "title": "From tabular data to raster",
    "section": "Limitations",
    "text": "Limitations\n\nMatrices are only advantageous if they are densely populated (little NAs)\nSpeed and memory footprint is only relevant if the data is large\n\n\n\nIf data is mostly missing, wide format can be wasteful\nFor small datasets, the overhead isn’t worth it\nRemote sensing data is typically large and dense - perfect for this approach\nThis sets up why raster format is natural for imagery\n\n\n\n\n\n\nBaltagi, Badi Hani, and Badi H Baltagi. 2008. Econometric Analysis of Panel Data. Vol. 4. Springer. https://bcs.wiley.com/he-bcs/Books?action=resource&bcsId=4338&itemId=1118672321&resourceId=13452.\n\n\nWickham, Hadley. 2014. “Tidy Data.” Journal of Statistical Software 59 (10): 1–23. https://doi.org/10.18637/jss.v059.i10.",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>From tabular data to raster</span>"
    ]
  },
  {
    "objectID": "lesson1-2-tasks.html",
    "href": "lesson1-2-tasks.html",
    "title": "Tasks",
    "section": "",
    "text": "Task 1\nImport the Produc dataset (from the package plm) using the following code:\ndata(Produc, package = \"plm\")",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tasks</span>"
    ]
  },
  {
    "objectID": "lesson1-2-tasks.html#task-2",
    "href": "lesson1-2-tasks.html#task-2",
    "title": "Tasks",
    "section": "Task 2",
    "text": "Task 2\nConvert the data from long to wide\n\n\nSample Solution\nlibrary(plm)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(tibble)\ndata(\"Produc\", package = \"plm\")\n\nProduc_wide &lt;- Produc |&gt; \n  select(year, state, unemp) |&gt; \n  pivot_wider(names_from = state, values_from = unemp) |&gt; \n  column_to_rownames(\"year\")",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tasks</span>"
    ]
  },
  {
    "objectID": "lesson1-2-tasks.html#task-3",
    "href": "lesson1-2-tasks.html#task-3",
    "title": "Tasks",
    "section": "Task 3",
    "text": "Task 3\nConvert the data to a matrix\n\n\nSample Solution\nProduc_matrix &lt;- as.matrix(Produc_wide)",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tasks</span>"
    ]
  },
  {
    "objectID": "lesson1-2-tasks.html#task-4",
    "href": "lesson1-2-tasks.html#task-4",
    "title": "Tasks",
    "section": "Task 4",
    "text": "Task 4\nCalculate mean unemployment first using the wide dataframe, then the new matrix. Compare the speed difference.\n\n\nSample Solution\nlibrary(bench)\nbm &lt;- bench::mark(\n    matrix = mean(Produc_matrix, na.rm = TRUE),\n    dataframe = mean(Produc_wide |&gt; unlist(),na.rm = TRUE),\n    filter_gc = FALSE\n)\n\nbm$total_time[2]/bm$total_time[1]\n\n\n[1] 5.9s\n\n\n\n\nGive students 10-15 minutes for hands-on practice\nWalk around and help with pivot_wider syntax\nThe speed comparison should be dramatic - good “wow” moment\nThis reinforces why we’ll use matrix-like structures for raster data",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tasks</span>"
    ]
  },
  {
    "objectID": "lesson1-3-imagery.html",
    "href": "lesson1-3-imagery.html",
    "title": "Imagery Data",
    "section": "",
    "text": "Images are Rasters\nFigure 3.1: Cell offset from origin (lower left)\n\n\n\n\n\n\n\n\n\n\n\nFigure 3.2: Cell values (for example elevation)\n\n\n\n\n\n\n\n\n\n\n\nFigure 3.3: Color representation of cell value",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Imagery Data</span>"
    ]
  },
  {
    "objectID": "lesson1-3-imagery.html#images-are-rasters",
    "href": "lesson1-3-imagery.html#images-are-rasters",
    "title": "Imagery Data",
    "section": "",
    "text": "The spatial raster data model represents the world with the continuous grid of cells (a.k.a. pixels)\nThis data model often refers to so-called regular grids, in which each cell has the same, constant size\nThrough its inherent model, this data naturally fits into the wide data structure\n\n\n\nThis connects directly to the previous lesson on wide vs long data\nEmphasize that raster data is inherently a grid/matrix structure\nEach pixel has a fixed location - this is why wide format makes sense\nRegular grids are the foundation of most remote sensing data\nWe will focus on the regular grids only. However, several other types of grids exist, including rotated, sheared, rectilinear, and curvilinear grids (see Chapter 1 of Pebesma and Bivand (2023)).",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Imagery Data</span>"
    ]
  },
  {
    "objectID": "lesson1-3-imagery.html#types-of-raster-data",
    "href": "lesson1-3-imagery.html#types-of-raster-data",
    "title": "Imagery Data",
    "section": "Types of raster data",
    "text": "Types of raster data\n\nRaster datasets usually represent continuous phenomena such as elevation, temperature, population density or spectral data.\nDiscrete features such as soil or land-cover classes can also be represented in the raster data model\n\n\n\nDistinguish between continuous (elevation, temperature) and discrete (land cover classes) data\nBoth can be stored in raster format, but analysis approaches differ\nMost remote sensing applications deal with continuous spectral values\nDiscrete classifications often result from processing continuous data\n\n\n\n\n\n\n\n\nA continuous raster with the elevation of Luxembourg\n\n\n\n\n\n\n\nA discrete raster with the municipalities of Luxembourg",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Imagery Data</span>"
    ]
  },
  {
    "objectID": "lesson1-3-imagery.html#a-simple-example-elevation",
    "href": "lesson1-3-imagery.html#a-simple-example-elevation",
    "title": "Imagery Data",
    "section": "A simple example: Elevation",
    "text": "A simple example: Elevation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      [,1] [,2] [,3] [,4] [,5] [,6]\n [1,]  275  282  373  342  357  326\n [2,]  230  318  316  351  345  346\n [3,]  164  337  258  342  363  350\n [4,]  168  337  261  354  358  364\n [5,]  202  322  250  380  362  373\n [6,]   NA  310  270  361  370  363\n [7,]   NA  277  310  291  375  365\n [8,]   NA  181  325  264  381  373\n [9,]   NA   NA  313  264  370  384\n[10,]   NA   NA  298  285  370  380\n[11,]  402   NA  333  293  356  382",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Imagery Data</span>"
    ]
  },
  {
    "objectID": "lesson1-3-imagery.html#a-more-complex-example-spectral-data",
    "href": "lesson1-3-imagery.html#a-more-complex-example-spectral-data",
    "title": "Imagery Data",
    "section": "A more complex example: Spectral data",
    "text": "A more complex example: Spectral data\n\nTypically, RS imagery consists of more than 1 band\nIn this case, the data is stored in a 3 dimensional array (where band is the 3rd-dimension)\nA RS image can contain any number of bands.\nThe most well known type of RS imagery consists of 3 Bands from the red, blue and green spectrum\n\n\n\nMove from 2D (single band) to 3D (multi-band) concept\nEach band captures different wavelengths of electromagnetic spectrum\nRGB is familiar to students - good starting point\nModern satellites can have hundreds of bands (hyperspectral)\n\n\n\n\n\n\n\n\n\n\n\nFigure 3.4: The bands stored internally\n\n\n\n\n\n\n\n\n\n\n\nFigure 3.5: The RGB Composite",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Imagery Data</span>"
    ]
  },
  {
    "objectID": "lesson1-3-imagery.html#each-band-is-a-2d-matrix",
    "href": "lesson1-3-imagery.html#each-band-is-a-2d-matrix",
    "title": "Imagery Data",
    "section": "Each band is a 2D matrix",
    "text": "Each band is a 2D matrix\n\n\n\n\n\n\n\n\n\nFigure 3.6: Band values\n\n\n\n\n\n\n\n\n\n\n\nFigure 3.7: RGB True Color Image",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Imagery Data</span>"
    ]
  },
  {
    "objectID": "lesson1-3-imagery.html#multispectral-datasets",
    "href": "lesson1-3-imagery.html#multispectral-datasets",
    "title": "Imagery Data",
    "section": "Multispectral Datasets",
    "text": "Multispectral Datasets\n\nMultiband datasets usually capture different parts of the EM spectrum\nE.g. the Landsat image from the previous example has 6 bands capturing the following wavelengths:\n\nBand 1: Blue (0.45 - 0.52 µm)\nBand 2: Green (0.52 - 0.60 µm)\nBand 3: Red (0.63 - 0.69 µm)\nBand 4: Near-Infrared (0.77 - 0.90 µm)\nBand 5: Short-wave Infrared (1.55 - 1.75 µm)\nBand 7: Mid-Infrared (2.08 - 2.35 µm)\n\n\n\n\nPoint out that Band 6 (thermal) is missing from this list - was not included in this dataset\nEach band serves different purposes: visible for true color, NIR for vegetation health, SWIR for moisture\nThese wavelength ranges are carefully chosen based on atmospheric windows and target phenomena\nStudents will learn to use different band combinations for different applications",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Imagery Data</span>"
    ]
  },
  {
    "objectID": "lesson1-3-imagery.html#nirgb-image",
    "href": "lesson1-3-imagery.html#nirgb-image",
    "title": "Imagery Data",
    "section": "NirGB Image",
    "text": "NirGB Image\n\n\n\n\n\n\n\n\n\nFigure 3.8: Band values\n\n\n\n\n\n\n\n\n\n\n\nFigure 3.9: NIR-GB False Color Image",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Imagery Data</span>"
    ]
  },
  {
    "objectID": "lesson1-3-imagery.html#representations-of-multispectral-data",
    "href": "lesson1-3-imagery.html#representations-of-multispectral-data",
    "title": "Imagery Data",
    "section": "Representations of multispectral data",
    "text": "Representations of multispectral data\n\nA true color image is created by using the Red (3), Green (2) and Blue (1) Band and mapping these to RGB\nA false color image is created by mapping other bands to RGB\n\n\n\nTrue color: what our eyes would see if we were there\nFalse color: reveals information not visible to human eye\nNIR false color is very common - vegetation appears red because it reflects strongly in NIR\nDifferent false color combinations highlight different features (water, urban areas, etc.)\n\n\n\n\n\n\n\n\n\n\n\nFigure 3.10: The R, G and B bands mapped to RGB\n\n\n\n\n\n\n\n\n\n\n\nFigure 3.11: NIR, G and B bands mapped to RGB\n\n\n\n\n\n\n\n\n\n\nPebesma, Edzer, and Roger Bivand. 2023. Spatial Data Science: With Applications in R. Boca Raton: Chapman; Hall/CRC. https://doi.org/10.1201/9780429459016.",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Imagery Data</span>"
    ]
  },
  {
    "objectID": "lesson1-4-tasks.html",
    "href": "lesson1-4-tasks.html",
    "title": "Tasks",
    "section": "",
    "text": "Task 1\nThe following command returns the path to a tif file on your hard drive:\nsystem.file(\"ex/elev.tif\", package=\"terra\")\nUse this path to import the tif file using rast(), store it as r.\nSample Solution\nlibrary(terra)\nr &lt;- system.file(\"ex/elev.tif\", package=\"terra\") |&gt; \n  rast()",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Tasks</span>"
    ]
  },
  {
    "objectID": "lesson1-4-tasks.html#task-2",
    "href": "lesson1-4-tasks.html#task-2",
    "title": "Tasks",
    "section": "Task 2",
    "text": "Task 2\nExplore this object:\n\nDetermine the minimum and maximum elevation values\nMake a static map using base plot and tmap\nMake an interactive map using tmap (tmap_mode(\"view\"))\nUsing tmap, explore different styles and palettes.\n\n\n\nSample Solution\n# Simply looking at the metadata will show min/max values\nr\n\n\nclass       : SpatRaster \nsize        : 90, 95, 1  (nrow, ncol, nlyr)\nresolution  : 0.008333333, 0.008333333  (x, y)\nextent      : 5.741667, 6.533333, 49.44167, 50.19167  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 (EPSG:4326) \nsource      : elev.tif \nname        : elevation \nmin value   :       141 \nmax value   :       547 \n\n\nSample Solution\nlibrary(tmap)\n\ntm_shape(r) +\n  tm_raster()",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Tasks</span>"
    ]
  },
  {
    "objectID": "lesson1-4-tasks.html#task-3",
    "href": "lesson1-4-tasks.html#task-3",
    "title": "Tasks",
    "section": "Task 3",
    "text": "Task 3\nThe following command returns the path to a tif file on your hard drive:\n\nsystem.file(\"tif/L7_ETMs.tif\",package = \"stars\")\n\nUse this path to import the tif file using rast(), store it as l7.\n\n\nSample Solution\nl7 &lt;- system.file(\"tif/L7_ETMs.tif\",package = \"stars\") |&gt; \n  rast()",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Tasks</span>"
    ]
  },
  {
    "objectID": "lesson1-4-tasks.html#task-4",
    "href": "lesson1-4-tasks.html#task-4",
    "title": "Tasks",
    "section": "Task 4",
    "text": "Task 4\nExplore this object:\n\nSpot the differences to the object r\nPlot the available layers individually\nRename the layers to: c(\"B\", \"G\", \"R\", \"NIR\", \"SWIR\", \"MIR\") (see here)",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Tasks</span>"
    ]
  },
  {
    "objectID": "lesson1-4-tasks.html#task-5",
    "href": "lesson1-4-tasks.html#task-5",
    "title": "Tasks",
    "section": "Task 5",
    "text": "Task 5\nSelect the Red Green and Blue bands to create a true color map (plotRGB and tm_rgb)\n\n\nSample Solution\nnames(l7) &lt;- c(\"B\", \"G\", \"R\", \"NIR\", \"SWIR\", \"MIR\")",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Tasks</span>"
    ]
  },
  {
    "objectID": "lesson1-4-tasks.html#task-6",
    "href": "lesson1-4-tasks.html#task-6",
    "title": "Tasks",
    "section": "Task 6",
    "text": "Task 6\nSelect the NIR, Green and Blue bands to create a false color composite\n\n\nAllow 15-20 minutes for these exercises\nHelp students with band selection syntax - this is often confusing initially\nEncourage experimentation with different band combinations\nPoint out how vegetation appears differently in true vs false color\nThis hands-on experience reinforces the theoretical concepts\n\n\n\n\nSample Solution\ntm_shape(l7[[c(\"NIR\",\"G\",\"B\")]]) + tm_rgb()",
    "crumbs": [
      "Lesson 1",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Tasks</span>"
    ]
  },
  {
    "objectID": "lesson2-1-operations.html",
    "href": "lesson2-1-operations.html",
    "title": "Raster Operations / Map algebra",
    "section": "",
    "text": "Introduction",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Raster Operations / Map algebra</span>"
    ]
  },
  {
    "objectID": "lesson2-1-operations.html#introduction",
    "href": "lesson2-1-operations.html#introduction",
    "title": "Raster Operations / Map algebra",
    "section": "",
    "text": "Map algebra can be defined as operations that modify or summarize raster cell values, with reference to surrounding cells, zones, or statistical functions that apply to every cell.\nMap algebra divides raster operations into four subclasses:\n\nLocal or per-cell operations\nFocal or neighborhood operations. Most often the output cell value is the result of a 3 x 3 input cell block\nZonal operations are similar to focal operations, but the surrounding pixel grid on which new values are computed can have irregular sizes and shapes\nGlobal or per-raster operations. That means the output cell derives its value potentially from one or several entire rasters",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Raster Operations / Map algebra</span>"
    ]
  },
  {
    "objectID": "lesson2-1-operations.html#global-operation-1",
    "href": "lesson2-1-operations.html#global-operation-1",
    "title": "Raster Operations / Map algebra",
    "section": "Global Operation (1)",
    "text": "Global Operation (1)\n\nThe most common global operations are descriptive statistics for the entire raster dataset such as the minimum, maximum or mean value.\nFor example: What is the mean elevation value for Luxembourg?\n\n\n\n\n\n\n\n\n\nFigure 5.1: Elevation of Luxembourg\n\n\n\n\n\n\n# note: mean(r) does not work, since \"mean\" is used as a local operator\nmean_elev &lt;- global(r, mean, na.rm = TRUE)\n\nmean_elev\n\n              mean\nelevation 348.3366",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Raster Operations / Map algebra</span>"
    ]
  },
  {
    "objectID": "lesson2-1-operations.html#global-operation-2",
    "href": "lesson2-1-operations.html#global-operation-2",
    "title": "Raster Operations / Map algebra",
    "section": "Global Operation (2)",
    "text": "Global Operation (2)\n\nAnother type of “global” operation is distance\nThis function calculates the distance from each cell to a specific target cell\nFor example, what is the distance from each cell to Luxembourg City, the capital of Luxembourg?\n\n\n\n\n\n\n\n\n\n\n\nr_dist &lt;- distance(r, luxembourg_city)\nr_dist &lt;- mask(r_dist, r)",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Raster Operations / Map algebra</span>"
    ]
  },
  {
    "objectID": "lesson2-1-operations.html#zonal",
    "href": "lesson2-1-operations.html#zonal",
    "title": "Raster Operations / Map algebra",
    "section": "Zonal",
    "text": "Zonal\n\nZonal operations apply an aggregation function to multiple raster cells\nA second raster with categorical values define the “zones”\n\nWhat is the mean altitude per municipality?\n\nmean_vals &lt;- zonal(r, zones, fun = mean, na.rm = TRUE)\n\n\n\n\n\n\n\n\n\n\nFigure 5.2: The original Zones (E.g. municipalities of Luxembourg)\n\n\n\n\n\n\n\n\n\n\n\nFigure 5.3: Mean elevation per zone / per municipality\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nThe global operation can be seen as a special case of a zonal operation, where the only “Zone” is the entire dataset",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Raster Operations / Map algebra</span>"
    ]
  },
  {
    "objectID": "lesson2-1-operations.html#local-1",
    "href": "lesson2-1-operations.html#local-1",
    "title": "Raster Operations / Map algebra",
    "section": "Local (1)",
    "text": "Local (1)\n\nLocal operations comprise all cell-by-cell operations in one or several layers.\nFor example, we can classify the elevation into values above and below a certain threshold\n\n\n# first, create a boolean copy of the raster\nr_bool &lt;- as.logical(r)\n\nmean_elev &lt;- as.numeric(mean_elev)\nmean_elev\n\n[1] 348.3366\n\nr_bool[r &gt; mean_elev] &lt;- FALSE\nr_bool[r &lt;= mean_elev] &lt;- TRUE",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Raster Operations / Map algebra</span>"
    ]
  },
  {
    "objectID": "lesson2-1-operations.html#local-2",
    "href": "lesson2-1-operations.html#local-2",
    "title": "Raster Operations / Map algebra",
    "section": "Local (2)",
    "text": "Local (2)\n\nThis type of (re-) classification is a very common operation\nFor more than 2 categories, we can use classify\n\n\ncuts &lt;- global(r, quantile, probs = c(0, .33, .66, 1), na.rm = TRUE)\n\nr_classify &lt;- classify(r, as.numeric(cuts))\n\n# this next line just replaces the default labels with some custom ones\nlevels(r_classify) &lt;- data.frame(ID = 0:2, category = c(\"low\",\"mid\",\"high\"))\n\np + tm_shape(r_classify) +\n    tm_raster(style = \"cat\",legend.show = TRUE, palette = \"viridis\", title = \"Elevation\") +\n    tm_layout(legend.show = TRUE)",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Raster Operations / Map algebra</span>"
    ]
  },
  {
    "objectID": "lesson2-1-operations.html#local-3",
    "href": "lesson2-1-operations.html#local-3",
    "title": "Raster Operations / Map algebra",
    "section": "Local (3)",
    "text": "Local (3)\n\nLocal operations are often used with multiple bands\nFor example, we could calculate the mean intensity values of red, green and blue:\n\n\nl7 &lt;- rast(system.file(\"tif/L7_ETMs.tif\",package = \"stars\"))\n\nnames(l7) &lt;- c(\"B\", \"G\", \"R\", \"NIR\", \"SWIR\", \"MIR\")\n\nl7_rgb &lt;- l7[[c(\"R\",\"G\", \"B\")]]\n\nplot(l7_rgb, nr = 1)\n\n\n\n\n\n\n\n\n\nl7_rgb_mean &lt;- mean(l7_rgb)\n\nplot(l7_rgb_mean)",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Raster Operations / Map algebra</span>"
    ]
  },
  {
    "objectID": "lesson2-1-operations.html#local-4",
    "href": "lesson2-1-operations.html#local-4",
    "title": "Raster Operations / Map algebra",
    "section": "Local (4)",
    "text": "Local (4)\n\nIn a more complex usecase, we could use the R, G and B band to calculate a grayscale value (\\(L^*\\)) using the following formula (from here):\n\n\\[\\begin{aligned}\n\\gamma &= 2.2 \\\\\nL^* &= 116 \\times Y ^ {\\frac{1}{3}} - 16\\\\\nY &= 0.2126 \\times R^\\gamma+0.7152 \\times G^\\gamma+0.0722 \\times B^\\gamma \\\\\n\\end{aligned}\n\\]\n\ng &lt;- 2.2\n\nl7 &lt;- l7/255 # scale values to 0-1\n\nY &lt;- 0.2126 * l7[[\"R\"]]^g + 0.7152 * l7[[\"G\"]]^g + 0.0722 * l7[[\"B\"]]^g\n\nL &lt;- 116* Y^(1/3)-16",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Raster Operations / Map algebra</span>"
    ]
  },
  {
    "objectID": "lesson2-1-operations.html#sec-focal-1",
    "href": "lesson2-1-operations.html#sec-focal-1",
    "title": "Raster Operations / Map algebra",
    "section": "Focal",
    "text": "Focal\n\nWhile local functions operate on one cell focal operations take into account a central (focal) cell and its neighbors.\nThe neighborhood (also named kernel, filter or moving window) under consideration is typically of size 3-by-3 cells (that is the central cell and its eight surrounding neighbors), but can take on any other size or shape as defined by the user.\nA focal operation applies an aggregation function to all cells within the specified neighborhood, uses the corresponding output as the new value for the central cell, and moves on to the next central cell\n\n\n\n\n\n\n\nFigure 5.4: Note how, depending on the size of your moving window, NA’s are produced. Source: Lovelace, Nowosad, and Muenchow (2019)\n\n\n\n\nfocal3by3 &lt;- matrix(rep(1,9), ncol = 3)\n\n\nfocal11by11 &lt;- matrix(rep(1,121), ncol = 11)\n\n\nr_foc3 &lt;- focal(r, focal3by3, fun = mean, fillNA = TRUE)\n\nr_foc11 &lt;- focal(r, focal11by11, fun = mean, fillNA = TRUE)\n\n\n\n\n\n\n\n\n\n\nFigure 5.5: Original values\n\n\n\n\n\n\n\n\n\n\n\nFigure 5.6: Result of a 3x3 Focal Window\n\n\n\n\n\n\n\n\n\n\n\nFigure 5.7: Result of a 11x11 Focal Window\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nNote how the output raster is smaller as the focal window is larger (edge effect)",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Raster Operations / Map algebra</span>"
    ]
  },
  {
    "objectID": "lesson2-1-operations.html#focal-weights-1",
    "href": "lesson2-1-operations.html#focal-weights-1",
    "title": "Raster Operations / Map algebra",
    "section": "Focal weights (1)",
    "text": "Focal weights (1)\n\nThe focal weights we used above were square and evenly weighted\n\n\nfocal3by3\n\n     [,1] [,2] [,3]\n[1,]    1    1    1\n[2,]    1    1    1\n[3,]    1    1    1\n\n\n\nfocal11by11\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11]\n [1,]    1    1    1    1    1    1    1    1    1     1     1\n [2,]    1    1    1    1    1    1    1    1    1     1     1\n [3,]    1    1    1    1    1    1    1    1    1     1     1\n [4,]    1    1    1    1    1    1    1    1    1     1     1\n [5,]    1    1    1    1    1    1    1    1    1     1     1\n [6,]    1    1    1    1    1    1    1    1    1     1     1\n [7,]    1    1    1    1    1    1    1    1    1     1     1\n [8,]    1    1    1    1    1    1    1    1    1     1     1\n [9,]    1    1    1    1    1    1    1    1    1     1     1\n[10,]    1    1    1    1    1    1    1    1    1     1     1\n[11,]    1    1    1    1    1    1    1    1    1     1     1",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Raster Operations / Map algebra</span>"
    ]
  },
  {
    "objectID": "lesson2-1-operations.html#focal-weights-2",
    "href": "lesson2-1-operations.html#focal-weights-2",
    "title": "Raster Operations / Map algebra",
    "section": "Focal weights (2)",
    "text": "Focal weights (2)\n\nHowever, we can also create uneven weights:\n\nFor example, a laplacian filter is commonly used for edge detection.\n\nlaplacian &lt;- matrix(c(0,1,0,1,-4,1,0,1,0), nrow=3) \n\nlaplacian\n\n     [,1] [,2] [,3]\n[1,]    0    1    0\n[2,]    1   -4    1\n[3,]    0    1    0\n\n\nSo are the sobel filters\n\n\n     [,1] [,2] [,3]\n[1,]   -1    0    1\n[2,]   -2    0    2\n[3,]   -1    0    1\n\n\n     [,1] [,2] [,3]\n[1,]    1    2    1\n[2,]    0    0    0\n[3,]   -1   -2   -1\n\n\n\n\n\n\n\n\n\n\n\nFigure 5.8: Laplacian Filter\n\n\n\n\n\n\n\n\n\n\n\nFigure 5.9: Sobel (x-direction)\n\n\n\n\n\n\n\n\n\n\n\nFigure 5.10: SObel (y-direction)",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Raster Operations / Map algebra</span>"
    ]
  },
  {
    "objectID": "lesson2-1-operations.html#from-cells-to-real-world-units-2",
    "href": "lesson2-1-operations.html#from-cells-to-real-world-units-2",
    "title": "Raster Operations / Map algebra",
    "section": "From cells to real world units (2)",
    "text": "From cells to real world units (2)\n\nWe have been specifying our focal weights in terms of cell units\nIn most cases, it is more reasonable to work with real world units\nThe resolution of our raster is 0.008333333 (see res(r)) and since our raster is in WGS84, the units is “degrees”.\nTo work with more managable units, we can convert the raster to a projected CRS that uses “meters”, e.g. EPSG 2169\n\n\n\n[1] 0.008333333 0.008333333\n\n\n\ncrs(r, parse = TRUE)\n\n\n\n[1] \"(output truncated)\"                             \n[2] \"...\"                                            \n[3] \"    ELLIPSOID[\\\"WGS 84\\\",6378137,298.257223563,\"\n[4] \"        LENGTHUNIT[\\\"metre\\\",1]],\"              \n[5] \"    ENSEMBLEACCURACY[2.0]],\"                    \n[6] \"...\"                                            \n\n\n\n# Reproject to a \"projected\" CRS\nr_2169 &lt;- project(r, \"EPSG:2169\")\n\ncrs(r_2169, parse = TRUE)\n\n\n\n[1] \"PROJCRS[\\\"LUREF / Luxembourg TM\\\",\"                   \n[2] \"BASEGEOGCRS[\\\"LUREF\\\",\"                               \n[3] \"    DATUM[\\\"Luxembourg Reference Frame\\\",\"            \n[4] \"        ELLIPSOID[\\\"International 1924\\\",6378388,297,\"\n[5] \"            LENGTHUNIT[\\\"metre\\\",1]]],\"               \n[6] \"...\"                                                  \n[7] \"(output truncated)\"",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Raster Operations / Map algebra</span>"
    ]
  },
  {
    "objectID": "lesson2-1-operations.html#from-cells-to-real-world-units-2-1",
    "href": "lesson2-1-operations.html#from-cells-to-real-world-units-2-1",
    "title": "Raster Operations / Map algebra",
    "section": "From cells to real world units (2)",
    "text": "From cells to real world units (2)\n\nThe resolution of our new raster is 771.9714782 meters.\nWe can resample this to 1 km to simplify things\n\n\nres(r_2169)\n\n[1] 771.9715 771.9715\n\n# first, create template raster with the same extent and 1km resolution\ntemplate &lt;- rast(res = 1000, ext = ext(r_2169))\n\n# then, resample to this template\nr_2169 &lt;- resample(r_2169, template)",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Raster Operations / Map algebra</span>"
    ]
  },
  {
    "objectID": "lesson2-1-operations.html#focal-weights-with-focalmat",
    "href": "lesson2-1-operations.html#focal-weights-with-focalmat",
    "title": "Raster Operations / Map algebra",
    "section": "Focal weights with focalMat",
    "text": "Focal weights with focalMat\n\nNow that we have a raster with managable units and resolution, we can create specific focal shapes using focalMat.\nfocalMat can create circles, rectangles and gaussian shapes. The size of the shape is determined by d, which has different meanings for different shapes (always in the units of the CRS):\n\ncircle: d specifies the circle radius\nrectangle: d can be 1 or 2 values, specifiying the dimensions of the rectangle\nGauss: the size of sigma\n\nThe function returns a matrix which takes the raster resultion into account. (i.e. d is divided by the raster resolution)\nThe sum of all values in the matrix is 1\n\n\nfocal_circle &lt;- focalMat(x = r_2169, d = 2000, \"circle\")\n\nfocal_circle\n\n           [,1]       [,2]       [,3]\n[1,] 0.00000000 0.09090909 0.00000000\n[2,] 0.09090909 0.09090909 0.09090909\n[3,] 0.09090909 0.09090909 0.09090909\n[4,] 0.09090909 0.09090909 0.09090909\n[5,] 0.00000000 0.09090909 0.00000000\n\n\n\n\n\n\n\nA visual representation of the matrix / filter above\n\n\n\n\n\nfocal_gauss &lt;- focalMat(x = r_2169, d = 2000, \"Gauss\")\n\n\n\n\n\n\nA visual representation of the matrix / filter above",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Raster Operations / Map algebra</span>"
    ]
  },
  {
    "objectID": "lesson2-1-operations.html#focal-functions-in-terrain-processing",
    "href": "lesson2-1-operations.html#focal-functions-in-terrain-processing",
    "title": "Raster Operations / Map algebra",
    "section": "Focal functions in terrain processing",
    "text": "Focal functions in terrain processing\n\nFocal functions are used to calculate the slope of a specific location, e.g. using the algorithm by Horn (1981)\nSimilarly, calculating the aspect (azimuth) of a location is a very typical task when dealing with elevation data\nThese algorithms are used so often, that they are implemented in a dedicated function (terrain())\n\nterrain(r, \"slope\") |&gt; plot()\nterrain(r, \"aspect\") |&gt; plot()\n\n\n\n\n\n\n\n\n\nFigure 5.11: Calculating slope using a predefined algorithm\n\n\n\n\n\n\n\n\n\n\n\nFigure 5.12: Calculating aspect\n\n\n\n\n\n\n\n\n\n\nHorn, Berthold KP. 1981. “Hill Shading and the Reflectance Map.” Proceedings of the IEEE 69 (1): 14–47.\n\n\nLovelace, Robin, Jakub Nowosad, and Jannes Muenchow. 2019. Geocomputation with r. Chapman; Hall/CRC.",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Raster Operations / Map algebra</span>"
    ]
  },
  {
    "objectID": "lesson2-2-tasks.html",
    "href": "lesson2-2-tasks.html",
    "title": "Tasks / Exercises",
    "section": "",
    "text": "Task 1\nDownload and import the elevation of Luxembourg from Moodle (CW43 → Datasets)",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Tasks / Exercises</span>"
    ]
  },
  {
    "objectID": "lesson2-2-tasks.html#task-2",
    "href": "lesson2-2-tasks.html#task-2",
    "title": "Tasks / Exercises",
    "section": "Task 2",
    "text": "Task 2\nCalculate the mean, maximum and minimum elevation values",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Tasks / Exercises</span>"
    ]
  },
  {
    "objectID": "lesson2-2-tasks.html#task-3",
    "href": "lesson2-2-tasks.html#task-3",
    "title": "Tasks / Exercises",
    "section": "Task 3",
    "text": "Task 3\nCalculate slope and aspect (see terrain functions)",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Tasks / Exercises</span>"
    ]
  },
  {
    "objectID": "lesson2-2-tasks.html#task-4",
    "href": "lesson2-2-tasks.html#task-4",
    "title": "Tasks / Exercises",
    "section": "Task 4",
    "text": "Task 4\nDetermine suitable locations of solar panels using the following conditions: - Elevation: above 300 MASL - Slope: Between 1 and 3° - Aspect: Southfacing (between 135 and 235°)",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Tasks / Exercises</span>"
    ]
  },
  {
    "objectID": "lesson2-2-tasks.html#task-5",
    "href": "lesson2-2-tasks.html#task-5",
    "title": "Tasks / Exercises",
    "section": "Task 5",
    "text": "Task 5\nDownload the Municipalities of Luxembourg from Moodle and calculate the minimum, maximum and mean elevation values per municipality.",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Tasks / Exercises</span>"
    ]
  },
  {
    "objectID": "lesson2-2-tasks.html#task-6",
    "href": "lesson2-2-tasks.html#task-6",
    "title": "Tasks / Exercises",
    "section": "Task 6",
    "text": "Task 6\nSmooth the elevation values using different focal windows",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Tasks / Exercises</span>"
    ]
  },
  {
    "objectID": "lesson2-2-tasks.html#task-7",
    "href": "lesson2-2-tasks.html#task-7",
    "title": "Tasks / Exercises",
    "section": "Task 7",
    "text": "Task 7\nImport the multispectral Landsat 7 as a raster using the following path\n::: {.cell}\nsystem.file(\"tif/L7_ETMs.tif\",package = \"stars\")\n:::",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Tasks / Exercises</span>"
    ]
  },
  {
    "objectID": "lesson2-2-tasks.html#task-8",
    "href": "lesson2-2-tasks.html#task-8",
    "title": "Tasks / Exercises",
    "section": "Task 8",
    "text": "Task 8\nCalculate the NDVI using the following formula:\n\\[\\text{NDVI} = \\frac{\\text{NIR}-\\text{red}}{\\text{NIR}+\\text{red}}\\]",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Tasks / Exercises</span>"
    ]
  },
  {
    "objectID": "lesson2-2-tasks.html#task-9",
    "href": "lesson2-2-tasks.html#task-9",
    "title": "Tasks / Exercises",
    "section": "Task 9",
    "text": "Task 9\nDownload a Sentinel 2 Image from browser.dataspace.copernicus.eu for a location of your choosing. Import it as a raster image in R. Note that you have to import the individual bands and then recombine the image to a multiband raster.",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Tasks / Exercises</span>"
    ]
  },
  {
    "objectID": "lesson2-2-tasks.html#task-10",
    "href": "lesson2-2-tasks.html#task-10",
    "title": "Tasks / Exercises",
    "section": "Task 10",
    "text": "Task 10\nCreate a True-Color RGB Image and a False-Color NirGB Image using the appropriate bands (see Spectral Bands (Wikipedia))",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Tasks / Exercises</span>"
    ]
  },
  {
    "objectID": "lesson2-2-tasks.html#task-11",
    "href": "lesson2-2-tasks.html#task-11",
    "title": "Tasks / Exercises",
    "section": "Task 11",
    "text": "Task 11\nCalculate NDVI of the Sentinel 2 Image using the appropriate bands",
    "crumbs": [
      "Lesson 2",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Tasks / Exercises</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Baltagi, Badi Hani, and Badi H Baltagi. 2008. Econometric Analysis\nof Panel Data. Vol. 4. Springer. https://bcs.wiley.com/he-bcs/Books?action=resource&bcsId=4338&itemId=1118672321&resourceId=13452.\n\n\nHorn, Berthold KP. 1981. “Hill Shading and the Reflectance\nMap.” Proceedings of the IEEE 69 (1): 14–47.\n\n\nLovelace, Robin, Jakub Nowosad, and Jannes Muenchow. 2019.\nGeocomputation with r. Chapman; Hall/CRC.\n\n\nPebesma, Edzer, and Roger Bivand. 2023. Spatial Data Science: With\nApplications in R. Boca Raton: Chapman; Hall/CRC. https://doi.org/10.1201/9780429459016.\n\n\nWickham, Hadley. 2014. “Tidy Data.” Journal of\nStatistical Software 59 (10): 1–23. https://doi.org/10.18637/jss.v059.i10.",
    "crumbs": [
      "References"
    ]
  }
]