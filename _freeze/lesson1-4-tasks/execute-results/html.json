{
  "hash": "d8dd6c898aab4e1b9cadb6e3ca1798fb",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexecute:\n  echo: true\n  collapse: true\ncode-fold: true\ncode-summary: \"Sample Solution\"\n---\n\n## Tasks\n\n:::{.callout-important}\n- **Try this without AI first** - struggle builds understanding. \n- Ask if you are struggling. Asking builds understanding as well!\n:::\n\n## Task 1\n\nThe following command returns the path to a tif file on your hard drive:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nsystem.file(\"ex/elev.tif\", package=\"terra\")\n```\n:::\n\n   \nUse this path to import the tif file using `rast()`, store it as `r`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(terra)\nr <- system.file(\"ex/elev.tif\", package=\"terra\") |> \n  rast()\n```\n:::\n\n\n\n   \n## Task 2\n\nExplore this object:\n\n   - Determine the minimum and maximum elevation values\n   - Make a static map using base plot and `tmap`\n   - Make an interactive map using tmap (`tmap_mode(\"view\")`)\n   - Using tmap, explore different [styles](https://r-tmap.github.io/tmap/reference/tm_raster.html#arg-style) and [palettes](https://r-tmap.github.io/tmap/reference/tm_raster.html#arg-palette). \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Simply looking at the metadata will show min/max values\nr\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \nsize        : 90, 95, 1  (nrow, ncol, nlyr)\nresolution  : 0.008333333, 0.008333333  (x, y)\nextent      : 5.741667, 6.533333, 49.44167, 50.19167  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 (EPSG:4326) \nsource      : elev.tif \nname        : elevation \nmin value   :       141 \nmax value   :       547 \n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tmap)\n\ntm_shape(r) +\n  tm_raster()\n```\n\n::: {.cell-output-display}\n![](lesson1-4-tasks_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## Task 3\n\nThe following command returns the path to a tif file on your hard drive:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nsystem.file(\"tif/L7_ETMs.tif\",package = \"stars\")\n```\n:::\n\n\nUse this path to import the tif file using `rast()`, store it as `l7`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nl7 <- system.file(\"tif/L7_ETMs.tif\",package = \"stars\") |> \n  rast()\n```\n:::\n\n\n\n## Task 4\n\nExplore this object:\n\n- Spot the differences to the object `r`\n- Plot the available layers individually\n- Rename the layers to: `c(\"B\", \"G\", \"R\", \"NIR\", \"SWIR\", \"MIR\")` (see [here](https://r-spatial.github.io/stars/reference/L7_ETMs.html))\n\n\n## Task 5\n\nSelect the Red Green and Blue bands to create a true color map (`plotRGB` and `tm_rgb`)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(l7) <- c(\"B\", \"G\", \"R\", \"NIR\", \"SWIR\", \"MIR\")\n```\n:::\n\n\n## Task 6\n\nSelect the NIR, Green and Blue bands to create a false color composite\n\n:::{.notes}\n- Allow 15-20 minutes for these exercises\n- Help students with band selection syntax - this is often confusing initially\n- Encourage experimentation with different band combinations\n- Point out how vegetation appears differently in true vs false color\n- This hands-on experience reinforces the theoretical concepts\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(l7[[c(\"NIR\",\"G\",\"B\")]]) + tm_rgb()\n```\n:::\n\n\n\n\n \n\n",
    "supporting": [
      "lesson1-4-tasks_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}