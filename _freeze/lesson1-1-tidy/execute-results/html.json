{
  "hash": "85381dceb37fedaae448efc4cbf8115d",
  "result": {
    "engine": "knitr",
    "markdown": "\n# From tabular data to raster {#sec-tidy-to-raster}\n\n<!-- Todo: This is too long and takes up too much time -->\n\n\n::: {.cell}\n\n:::\n\n\n\n\n## Tabular data\n\n- @wickham2014: Tidy tabular data: Each variable is a column, each observation is a row, and each type of observational unit\nis a table.\n- Below is a dataset from @baltagi2008\n- *Observation* is a state in a particular year\n- *Variable* is a measured parameter (see below)\n\n:::{.notes}\n- Start with Wickham's fundamental definition - this is the foundation\n- Emphasize this is about data structure, not just organization\n- The Produc dataset is a classic econometric panel dataset - good for demonstrating concepts\n- Make sure students understand what constitutes an \"observation\" vs a \"variable\"\n:::\n\n\n\n:::{.callout-note collapse=\"true\"}\n\n## Parameter\n\n- pcap: public capital stock\n- hwy: highway and streets\n- water: water and sewer facilities\n- util: other public buildings and structures\n- pc: private capital stock\n- gsp: gross state product\n- emp: labor input measured by the employment in non–agricultural payrolls\n- unemp: state unemployment rate\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nProduc <- read_csv(\"data/Produc.csv\") |> \n    select(-region) |> \n    filter(!(state == \"ARIZONA\" & year == 1971))\n\n# Produc[Produc$state == \"ARIZONA\" & Produc$year == 1971,c(\"unemp\")] <- NA\n\nProduc |> \n    head() |> \n    kable()\n```\n\n::: {.cell-output-display}\n\n\n|state   | year|     pcap|     hwy|   water|    util|       pc|   gsp|    emp| unemp|\n|:-------|----:|--------:|-------:|-------:|-------:|--------:|-----:|------:|-----:|\n|ALABAMA | 1970| 15032.67| 7325.80| 1655.68| 6051.20| 35793.80| 28418| 1010.5|   4.7|\n|ALABAMA | 1971| 15501.94| 7525.94| 1721.02| 6254.98| 37299.91| 29375| 1021.9|   5.2|\n|ALABAMA | 1972| 15972.41| 7765.42| 1764.75| 6442.23| 38670.30| 31303| 1072.3|   4.7|\n|ALABAMA | 1973| 16406.26| 7907.66| 1742.41| 6756.19| 40084.01| 33430| 1135.5|   3.9|\n|ALABAMA | 1974| 16762.67| 8025.52| 1734.85| 7002.29| 42057.31| 33749| 1169.8|   5.5|\n|ALABAMA | 1975| 17316.26| 8158.23| 1752.27| 7405.76| 43971.71| 33604| 1155.4|   7.7|\n\n\n:::\n:::\n\n\n\n:::{.callout-note .notes collapse=\"true\"}\n- This is considered a *long* table and is great for modelling and visualization.\n- It's bad for memory (a lot of repetitions)\n:::\n\n\n\n## Long tables have a lot of repetitions:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlength(Produc$state)\n## [1] 815\nn_distinct(Produc$state)\n## [1] 48\n\nlength(Produc$year)\n## [1] 815\nn_distinct(Produc$year)\n## [1] 17\n\n\nn_values <- dim(Produc) |>\n  prod()\n\nn_values\n## [1] 8150\n```\n:::\n\n\n:::{.notes}\n- Walk through the calculation step by step\n- 816 total entries for state, but only 48 unique states\n- This repetition is characteristic of long/tidy format\n- Great for analysis but wasteful of memory\n- This leads naturally to why we might want wide format for raster data\n:::\n\n\n\n## Wide tables have less repetitions.\n\nTo demonstrate we convert a long to wide.\n\n:::{.notes}\n- This is the key transition - from statistical/analysis format to raster format\n- Wide format is more memory efficient but less flexible for analysis\n- This mirrors how raster data is naturally stored\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# Pivoting must be done per variable\nProduc_wide <- Produc |> \n    select(state, year, unemp) |> \n    pivot_wider(names_from = state, values_from = unemp) |> \n    column_to_rownames(\"year\")\n```\n:::\n\n\n\n:::{.callout-note .notes collapse=\"true\"}\n\nWe can either omit the column \"year\", (since this is implicit knowledge, $row_i + 1970$), or use it as a `rowname`.\n:::\n\n\n\n## Long vs Wide \n\nLong / tidy:\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nProduc |> \n    head(5) |> \n    kable()\n```\n\n::: {.cell-output-display}\n\n\n|state   | year|     pcap|     hwy|   water|    util|       pc|   gsp|    emp| unemp|\n|:-------|----:|--------:|-------:|-------:|-------:|--------:|-----:|------:|-----:|\n|ALABAMA | 1970| 15032.67| 7325.80| 1655.68| 6051.20| 35793.80| 28418| 1010.5|   4.7|\n|ALABAMA | 1971| 15501.94| 7525.94| 1721.02| 6254.98| 37299.91| 29375| 1021.9|   5.2|\n|ALABAMA | 1972| 15972.41| 7765.42| 1764.75| 6442.23| 38670.30| 31303| 1072.3|   4.7|\n|ALABAMA | 1973| 16406.26| 7907.66| 1742.41| 6756.19| 40084.01| 33430| 1135.5|   3.9|\n|ALABAMA | 1974| 16762.67| 8025.52| 1734.85| 7002.29| 42057.31| 33749| 1169.8|   5.5|\n\n\n:::\n:::\n\n\n<hr>\n\nWide / untidy:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nProduc_wide |> \n    head(5) |> \n    kable()\n```\n\n::: {.cell-output-display}\n\n\n|     | ALABAMA| ARIZONA| ARKANSAS| CALIFORNIA| COLORADO| CONNECTICUT| DELAWARE| FLORIDA| GEORGIA| IDAHO| ILLINOIS| INDIANA| IOWA| KANSAS| KENTUCKY| LOUISIANA| MAINE| MARYLAND| MASSACHUSETTS| MICHIGAN| MINNESOTA| MISSISSIPPI| MISSOURI| MONTANA| NEBRASKA| NEVADA| NEW_HAMPSHIRE| NEW_JERSEY| NEW_MEXICO| NEW_YORK| NORTH_CAROLINA| NORTH_DAKOTA| OHIO| OKLAHOMA| OREGON| PENNSYLVANIA| RHODE_ISLAND| SOUTH_CAROLINA| SOUTH_DAKOTA| TENNESSE| TEXAS| UTAH| VERMONT| VIRGINIA| WASHINGTON| WEST_VIRGINIA| WISCONSIN| WYOMING|\n|:----|-------:|-------:|--------:|----------:|--------:|-----------:|--------:|-------:|-------:|-----:|--------:|-------:|----:|------:|--------:|---------:|-----:|--------:|-------------:|--------:|---------:|-----------:|--------:|-------:|--------:|------:|-------------:|----------:|----------:|--------:|--------------:|------------:|----:|--------:|------:|------------:|------------:|--------------:|------------:|--------:|-----:|----:|-------:|--------:|----------:|-------------:|---------:|-------:|\n|1970 |     4.7|     4.4|      5.0|        7.2|      4.4|         5.6|      4.8|     4.4|     4.1|   5.8|      4.1|     5.0|  3.7|    4.8|      5.0|       6.6|   5.7|      3.3|           4.6|      6.7|       4.2|         4.8|      3.3|     5.5|      3.1|    5.9|           3.3|        4.6|        5.9|      4.5|            4.3|          4.6|  5.4|      4.4|    6.2|          4.5|          5.2|            5.0|          3.3|      4.8|   4.4|  6.1|     4.9|      3.4|        9.1|           6.1|       3.9|     4.5|\n|1971 |     5.2|      NA|      5.4|        8.8|      4.0|         8.9|      5.7|     4.9|     3.9|   6.3|      5.1|     5.7|  4.2|    5.5|      5.5|       7.0|   7.6|      4.2|           6.6|      7.6|       4.4|         4.8|      4.9|     6.3|      3.6|    7.0|           4.7|        5.7|        6.2|      6.6|            4.8|          5.3|  6.5|      4.9|    6.6|          5.4|          6.8|            5.3|          3.7|      5.0|   4.9|  6.4|     6.8|      3.6|       10.0|           6.5|       4.5|     4.5|\n|1972 |     4.7|     4.2|      4.6|        7.6|      3.6|         8.2|      4.7|     4.5|     4.1|   6.2|      5.1|     4.5|  3.6|    4.0|      4.8|       6.1|   7.0|      4.7|           6.4|      7.0|       4.3|         3.9|      4.2|     6.2|      3.4|    7.0|           4.5|        5.8|        5.8|      6.7|            4.0|          4.9|  5.5|      4.5|    5.7|          5.4|          6.5|            4.2|          3.7|      3.6|   4.5|  6.1|     6.5|      3.6|        9.5|           6.5|       4.2|     4.0|\n|1973 |     3.9|     4.1|      4.1|        7.0|      3.4|         5.7|      4.6|     4.3|     3.9|   5.6|      4.1|     4.2|  2.9|    3.1|      4.4|       6.0|   5.9|      3.5|           6.7|      5.8|       4.4|         3.6|      3.7|     6.3|      3.3|    6.2|           3.9|        5.6|        5.7|      5.4|            3.5|          5.1|  4.3|      4.2|    5.3|          4.8|          6.2|            3.7|          3.3|      3.0|   3.9|  5.7|     5.6|      3.6|        7.7|           5.7|       4.1|     3.5|\n|1974 |     5.5|     5.6|      4.8|        7.7|      3.8|         6.2|      6.0|     6.2|     5.0|   6.0|      4.5|     5.9|  3.0|    3.5|      4.5|       6.7|   6.7|      3.7|           7.2|      8.7|       4.3|         4.1|      4.5|     6.7|      3.8|    7.5|           3.6|        6.9|        6.3|      6.3|            4.5|          3.0|  5.0|      4.4|    7.5|          5.1|          7.3|            4.5|          3.5|      3.9|   4.3|  5.9|     6.9|      4.0|        7.2|           5.9|       4.6|     3.6|\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n## Dataframe → Matrix\n\nLess repetitions / smaller memory footprint is only part of the advantage:\n\n- All columns now have the same datatype (`dbl`)\n  - This means, they can be stored in a matrix / array\n  - This gives us a *big* speed advantage (see @fig-benchmark)\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lesson1-1-tidy_files/figure-html/fig-benchmark-1.png){#fig-benchmark width=672}\n:::\n:::\n\n\n\n:::{.notes}\n- Homogeneous data types enable matrix operations\n- Matrices are stored contiguously in memory - much faster access\n- This speed difference becomes enormous with large raster datasets\n- Matrix operations are highly optimized and often vectorized\n:::\n\n\n## Limitations\n\n- Matrices are only advantageous if they are *densely* populated (little `NA`s)\n- Speed and memory footprint is only relevant if the data is large\n\n:::{.notes}\n- If data is mostly missing, wide format can be wasteful\n- For small datasets, the overhead isn't worth it\n- Remote sensing data is typically large and dense - perfect for this approach\n- This sets up why raster format is natural for imagery\n:::\n\n\n",
    "supporting": [
      "lesson1-1-tidy_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}